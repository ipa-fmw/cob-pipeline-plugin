<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
	<td>
	<div style="background-color:#F6F6F6;border:2px solid gray">
	<table border="0" with="100%">
	<j:set var="genId" value="${h.generateId()}"/>
  	<f:entry field="fork" title="${%fork}">
   		<f:combobox name="fork" onchange="${genId}validateName()" id="${genId}fork"/>
   		<div id="${genId}forkWarning" > <b><font color="red">${%noFork}</font></b> </div>
	</f:entry>
  	<f:entry field="repoName" title="${%repoName}">
   		<f:combobox name="repoName" id="${genId}repoName" onchange="generateFullName('${genId}'); ${genId}validateName()" style="width:250px;"/>
		<div id="${genId}nameWarning"/>
	</f:entry>
	<f:entry field="branch" title="${%branch}">
   		<f:combobox onchange="${genId}validateBranch()" id="${genId}branch"/>
   		<div id="${genId}branchWarning"/>
	</f:entry>
	<f:entry field="suffix" title="${%suffix}">
   		<f:textbox id="${genId}suffix" onchange="generateFullName('${genId}')" onkeyup="generateFullName('${genId}')" style="width:250px;"/>
	</f:entry>
	<f:entry field="fullName" title="${%fullName}">
   		<f:textbox name="fullName" id="${genId}fullName" readOnly="yes" style="width:500px;"/>
	</f:entry>
	<f:entry title="${%ROSReleaseVersion}" help="/plugin/cob-pipeline/help-rosDistros.html">
		<j:set var="rosDistros" value="${descriptor.allRosDistros}"/>
		<table align="center" border="0" cellpadding="0" cellspacing="0" width="100%">
			<tbody><tr>
				<f:rowSet name="rosDistro">
				<j:forEach var="g" items="${rosDistros}">
					<td width="*">
	                	<f:checkbox field="${g}" title="${g}" id="${genId}rosDistro" value="${g}" checked="${instance.isRosDistroChecked(g)}" onclick="${genId}updateEnv()"/>
	              	</td>
	            </j:forEach>
				</f:rowSet>		
			</tr></tbody>
		</table>
		<div id="${genId}rosDistroWarning"/>
	</f:entry>
	<f:entry field="prioUbuntuDistro" title="${%prioUbuntuDistro}">
		<table align="left" border="0" cellpadding="5" cellspacing="0" width="*">
			<tbody><tr>
				<td valign="top">
   					<select name="prioUbuntuDistro" id="${genId}selection" style="padding-right: 2px;" onchange="${genId}updateEnv()"/>
				</td>
			</tr></tbody>
   		</table>
	</f:entry>
	<f:entry field="prioArch" title="${%prioArch}">
		<table align="left" border="0" cellpadding="5" cellspacing="0" width="*">
			<tbody><tr>
				<td valign="top">
   					<f:select id="${genId}arch" onchange="${genId}updateEnv()" style="padding-right: 2px;"/>
				</td>
			</tr></tbody>
   		</table>
	</f:entry>
	<f:entry title="${%advanced}">
  		<f:advanced>
			<f:entry title="${%jobs}">
				<j:set var="ubuntuReleases" value="${descriptor.ubuntuReleases}"/>
  				<table border="0" width="*">
					<f:optionalBlock field="regularBuild" title="${%regularBuild}">
						<tr id="${genId}regularBuild" />
		    		</f:optionalBlock>
		    	</table>
  				<table border="0" width="*">
					<f:optionalBlock field="downstreamBuild" title="${%downstreamBuild}">
						<td valign="top" width="150"></td>
			      		<td valign="top" width="*">
							<f:checkbox field="nongraphicsTest" title="${%nongraphicsTest}"/>
						</td>
						<tr></tr>
						<td valign="top" width="150"></td>
						<td valign="top" width="*">
							<f:checkbox field="graphicsTest" title="${%graphicsTest}"/>
						</td>
		    		</f:optionalBlock>
		    	</table>
  				<table border="0" width="*">
					<f:optionalBlock field="hardwareBuild" title="${%hardwareBuild}">
						<td width="50"></td>
			            <td style="padding-right:20px; vertical-align:middle">${%robot}:</td>
			            <td width="*">
			            	 <f:select field="robot" style="padding-right: 2px"/>
			            </td>
		    		</f:optionalBlock>
		    	</table>
  				<table border="0" width="*">
					<td valign="top" width="*">
		    			<input type="checkbox" disabled="true"/> Release Job (not supported yet)
		    			<!--f:optionalBlock field="release" title="${%release}" /-->
		    		</td>
		    	</table>
		    </f:entry>
  		</f:advanced>
  	</f:entry>
  	<f:entry title="${%repoDeps}" field="repoDeps">
	    <f:repeatable field="repoDeps" noAddButton="false" minimum="0" header="${%repoDep}">
			<div style="background-color:#E5E5E5;border:2px solid gray">
	     	<table width="100%">
	        	<st:include class="${descriptor.clazz}" page="config.jelly" />
	
	        	<f:entry>
	          		<div align="right">
	            		<input type="button" value="${%delDep}" class="repeatable-delete" style="margin-left: 1em;" />
	          		</div>
	        	</f:entry>
	      	</table>
	      	</div>    	
	    </f:repeatable>
	 </f:entry>
	</table>
	</div>
	</td>
	 
	 <script>
  		var ${genId}Des = <st:bind value="${descriptor}"/>
	 	var ${genId}Inst = <st:bind value="${instance}"/>;
	 	
	 	function ${genId}isChecked(ubuntu, arch) {
	 	  	try {
		 		${genId}Inst.isMatrixEntryChecked(ubuntu, arch, function(t) {
		 			document.getElementById("${genId}matrix"+ubuntu+arch).checked = t.responseObject();
		 		});
		 	}
		 	catch(err) {
		 	}
	 	}
  		
  		function ${genId}updateEnv() {
  			var rosDistros = document.getElementsByTagName('input');
  			var rosDistroList = new Array();
  			
  			for(i=0;i&lt;rosDistros.length;i++) {
  				if (rosDistros[i].id == "${genId}rosDistro") {
	  				if(rosDistros[i].checked) {
				        rosDistroList.push(rosDistros[i].value);
				    }
  				}
	        }
	        
	        if (rosDistroList.length==0) {
	        	try {
	        		${genId}generateSelection();
	        			        		
	        		document.getElementById("${genId}rosDistroWarning").innerHTML = '<b><font color="red">${%selectFirst}</font></b>';
	        		document.getElementById("${genId}regularBuild").innerHTML = '<b><font color="red">${%selectFirst}</font></b>';
	        		validationOutput("${%selectFirst}", "${genId}rosDistro");
	        	}
	        	finally {
	        		return;
	        	}
	        }
	        try {
	        	validationOutput("", "${genId}rosDistro");
	        }
	        catch(err) {}
	        document.getElementById("${genId}rosDistroWarning").innerHTML = '';
	        ${genId}Des.getSupportedUbuntuReleases(rosDistroList.toString(), function(t) {
	  			var selected = document.getElementById("${genId}selection").value;
	  			var ubuntuList = t.responseObject();
		        
		        if (selected == "" || typeof selected === 'undefined' || selected === null) {
		        	try {
			        	${genId}Inst.getPrioUbuntuDistro(function(p) {
			        		${genId}generateSelection(ubuntuList, p.responseObject());
			        	});
		        	}
		        	catch(err) {
		        		${genId}generateSelection(ubuntuList, "");
		        	}
		        }
		        else {
		        	${genId}generateSelection(ubuntuList, selected);
		        }
	        });
  		}
  		
  		function ${genId}generateSelection(ubuntuList, selected) {
  			var selection = document.getElementById("${genId}selection");
	        var option=document.createElement("option");
	        
	        var len = selection.length;
	        for(i=0;i&lt;len;i++) {
	        	selection.remove(0);
	        }
	        
	        if (typeof ubuntuList === 'undefined') {
	        	option.text="${%selectFirstShort}";
	        	selection.add(option, null);
	        	return;
	        }

      		if (ubuntuList.length==0) {
      			option=document.createElement("option");
	        	option.text="${%noSharedUbuntuShort}";
	        	selection.add(option, null);
	        	document.getElementById("${genId}rosDistroWarning").innerHTML = '<b><font color="red">${%noSharedUbuntu}</font></b>';
	        	document.getElementById("${genId}regularBuild").innerHTML = '<b><font color="red">${%noSharedUbuntu}</font></b>';
	        	return;
	        }
	        else {
	        	for(i=0;i&lt;ubuntuList.length;i++) {
		        	option=document.createElement("option");
		        	option.text= ubuntuList[i];
	        		if (selected==ubuntuList[i]) {
	        			option.selected = true;
		        	}
		        	selection.add(option, null);
	        	}
        	}
	        	
	        ${genId}generateMatrix(ubuntuList, function() {
	        	var inputs = document.getElementsByTagName('input');
	        	
	        	for(i=0;i&lt;inputs.length;i++) {
	        		if (inputs[i].name.split("__")[0]==document.getElementById("${genId}selection").value &amp;&amp; inputs[i].name.split("__")[1]==document.getElementById("${genId}arch").value) {
	        			document.getElementById("${genId}matrix"+inputs[i].name.split("__")[0]+inputs[i].name.split("__")[1]).disabled = true;
	        		}
	        		else if (inputs[i].id.substring(0, "${genId}matrix".length)=="${genId}matrix") {
	        			${genId}isChecked(inputs[i].name.split("__")[0], inputs[i].name.split("__")[1])
	        		}
	        	}	        	
            });
  		}
  		
  		function ${genId}generateMatrix(ubuntuList, callback) {
			var head = '<td width="*">
  				<table border="0" width="*">
		      	<td width="100"></td>
		      	<th align="center" width="*"><font size="2px">${%ubuntu}</font></th>
		      	<td width="25"></td>
		      	<th colspan="2" align="center" width="150"><font size="2px">${%arch}</font></th>
				<tr/>
		      	<td width="100"></td>
		      	<td align="center" width="*"></td>
		      	<td width="25"></td>
		      	<td align="center" width="75"><b>${%amd64}</b></td>
		      	<td align="center" width="75"><b>${%i386}</b></td>
				<tr></tr>';
				
			var tail = '</table></td>';
			
			var body = '';
	      		
      		for (i=0;i&lt;ubuntuList.length;i++) {
      			body += '<td width="100"></td>
					<td align="center" width="*">
	                	<b>' + ubuntuList[i] + '</b>
	              	</td>
      				<td width="25"></td>
					<td align="center" width="*">
	                	<input type="checkbox" id="${genId}matrix' + ubuntuList[i] + 'amd64" name="' + ubuntuList[i] + '__amd64__env"/>
	              	</td><td align="center" width="*">
                		<input type="checkbox" id="${genId}matrix' + ubuntuList[i] + 'i386" name="' + ubuntuList[i] + '__i386__env"/>
              		</td>
					<tr></tr>';
      		}
      		document.getElementById("${genId}regularBuild").innerHTML = head + body + tail;
			callback();
  		}
  		
  		function ${genId}validateName() {
  			${genId}Des.checkName(document.getElementById("${genId}repoName").value, document.getElementById("${genId}fork").value, function(t) {
  				if (t.responseObject().indexOf('__succeeded') != -1) {
  					document.getElementById("${genId}nameWarning").innerHTML = t.responseObject().replace('__succeeded', '');
  					validationOutput("", "${genId}repoName");
  				}
  				else {
  					document.getElementById("${genId}nameWarning").innerHTML = '<b><font color="red">' + t.responseObject() + '</font></b>';
  					validationOutput(t.responseObject(), "${genId}repoName");
  				}
  				${genId}validateFork();
  			});
  		}
  		
  		function ${genId}validateFork() {
  			${genId}Des.checkFork(document.getElementById("${genId}fork").value, document.getElementById("${genId}repoName").value, function(t) {
  				if (t.responseObject().indexOf('__succeeded') != -1) {
	  				document.getElementById("${genId}forkWarning").innerHTML = t.responseObject().replace('__succeeded', '');
	  				validationOutput("", "${genId}fork");
  				}
  				else {
	  				document.getElementById("${genId}forkWarning").innerHTML = '<b><font color="red">' + t.responseObject() + '</font></b>';
	  				validationOutput(t.responseObject(), "${genId}fork");
  				}
  				${genId}validateBranch();
  			});
  		}
  		
  		function ${genId}validateBranch() {
  			${genId}Des.checkBranch(document.getElementById("${genId}branch").value, document.getElementById("${genId}fork").value, document.getElementById("${genId}repoName").value, function(t) {
  				if (t.responseObject().indexOf('__succeeded') != -1) {
	  				document.getElementById("${genId}branchWarning").innerHTML = t.responseObject().replace('__succeeded', '');
  					validationOutput("", "${genId}branch");
  				}
  				else {
  					document.getElementById("${genId}branchWarning").innerHTML = '<b><font color="red">' + t.responseObject() + '</font></b>';
  					validationOutput(t.responseObject(), "${genId}branch");
  				}
  			});
  		}
  		
  		if (typeof ${genId}Inst !== 'undefined') {
  			${genId}updateEnv();
  		}
	 </script>
</j:jelly>
